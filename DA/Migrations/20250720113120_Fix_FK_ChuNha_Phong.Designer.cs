// <auto-generated />
using System;
using DA.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DA.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20250720113120_Fix_FK_ChuNha_Phong")]
    partial class Fix_FK_ChuNha_Phong
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DA.Models.ChiTietHoaDon", b =>
                {
                    b.Property<int>("MaChiTiet")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaChiTiet"));

                    b.Property<decimal>("DonGia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MaDichVu")
                        .HasColumnType("int");

                    b.Property<int>("MaHoaDon")
                        .HasColumnType("int");

                    b.Property<decimal>("SoLuong")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ThanhTien")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("MaChiTiet");

                    b.HasIndex("MaDichVu");

                    b.HasIndex("MaHoaDon");

                    b.ToTable("ChiTietHoaDon");
                });

            modelBuilder.Entity("DA.Models.ChuNha", b =>
                {
                    b.Property<int>("MaChuNha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaChuNha"));

                    b.Property<string>("CCCD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaTaiKhoan")
                        .HasColumnType("int");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaChuNha");

                    b.HasIndex("MaTaiKhoan")
                        .IsUnique();

                    b.ToTable("ChuNha", (string)null);
                });

            modelBuilder.Entity("DA.Models.DichVu", b =>
                {
                    b.Property<int>("MaDichVu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaDichVu"));

                    b.Property<decimal>("DonGia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DonViTinh")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TenDichVu")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaDichVu");

                    b.ToTable("DichVu");
                });

            modelBuilder.Entity("DA.Models.HoaDon", b =>
                {
                    b.Property<int>("MaHoaDon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaHoaDon"));

                    b.Property<int>("MaHopDong")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayLap")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TrangThaiThanhToan")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaHoaDon");

                    b.HasIndex("MaHopDong");

                    b.ToTable("HoaDon");
                });

            modelBuilder.Entity("DA.Models.HopDong", b =>
                {
                    b.Property<int>("MaHopDong")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaHopDong"));

                    b.Property<int>("MaNguoiThue")
                        .HasColumnType("int");

                    b.Property<int>("MaPhong")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TienDatCoc")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaHopDong");

                    b.HasIndex("MaNguoiThue");

                    b.HasIndex("MaPhong");

                    b.ToTable("HopDong");
                });

            modelBuilder.Entity("DA.Models.LichSuLuuTru", b =>
                {
                    b.Property<int>("MaLichSu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaLichSu"));

                    b.Property<int>("MaNguoiThue")
                        .HasColumnType("int");

                    b.Property<int>("MaPhong")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NguoiThueMaNguoiThue")
                        .HasColumnType("int");

                    b.Property<int>("PhongMaPhong")
                        .HasColumnType("int");

                    b.HasKey("MaLichSu");

                    b.HasIndex("NguoiThueMaNguoiThue");

                    b.HasIndex("PhongMaPhong");

                    b.ToTable("LichSuLuuTrus");
                });

            modelBuilder.Entity("DA.Models.NguoiThue", b =>
                {
                    b.Property<int>("MaNguoiThue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaNguoiThue"));

                    b.Property<string>("CCCD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaTaiKhoan")
                        .HasColumnType("int");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaNguoiThue");

                    b.HasIndex("MaTaiKhoan")
                        .IsUnique();

                    b.ToTable("NguoiThue", (string)null);
                });

            modelBuilder.Entity("DA.Models.PhanHoi", b =>
                {
                    b.Property<int>("MaPhanHoi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaPhanHoi"));

                    b.Property<string>("KetQuaXuLy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaNguoiThue")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayGui")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayXuLy")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaPhanHoi");

                    b.HasIndex("MaNguoiThue");

                    b.ToTable("PhanHoi");
                });

            modelBuilder.Entity("DA.Models.Phong", b =>
                {
                    b.Property<int>("MaPhong")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaPhong"));

                    b.Property<int?>("ChuNhaMaChuNha")
                        .HasColumnType("int");

                    b.Property<double>("DienTich")
                        .HasColumnType("float");

                    b.Property<decimal>("GiaPhong")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LoaiPhong")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaChuNha")
                        .HasColumnType("int");

                    b.Property<string>("TenPhong")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaPhong");

                    b.HasIndex("ChuNhaMaChuNha");

                    b.HasIndex("MaChuNha");

                    b.ToTable("Phong", (string)null);
                });

            modelBuilder.Entity("DA.Models.Phong_DichVu", b =>
                {
                    b.Property<int>("MaPhong")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("MaDichVu")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("NgayApDung")
                        .HasColumnType("datetime2");

                    b.HasKey("MaPhong", "MaDichVu");

                    b.HasIndex("MaDichVu");

                    b.ToTable("Phong_DichVus");
                });

            modelBuilder.Entity("DA.Models.TaiKhoan", b =>
                {
                    b.Property<int>("MaTaiKhoan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaTaiKhoan"));

                    b.Property<string>("LoaiTaiKhoan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenDangNhap")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaTaiKhoan");

                    b.ToTable("TaiKhoan", (string)null);
                });

            modelBuilder.Entity("DA.Models.ChiTietHoaDon", b =>
                {
                    b.HasOne("DA.Models.DichVu", "DichVu")
                        .WithMany("ChiTietHoaDons")
                        .HasForeignKey("MaDichVu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DA.Models.HoaDon", "HoaDon")
                        .WithMany("ChiTietHoaDons")
                        .HasForeignKey("MaHoaDon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DichVu");

                    b.Navigation("HoaDon");
                });

            modelBuilder.Entity("DA.Models.ChuNha", b =>
                {
                    b.HasOne("DA.Models.TaiKhoan", "TaiKhoan")
                        .WithOne("ChuNha")
                        .HasForeignKey("DA.Models.ChuNha", "MaTaiKhoan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaiKhoan");
                });

            modelBuilder.Entity("DA.Models.HoaDon", b =>
                {
                    b.HasOne("DA.Models.HopDong", "HopDong")
                        .WithMany("HoaDons")
                        .HasForeignKey("MaHopDong")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HopDong");
                });

            modelBuilder.Entity("DA.Models.HopDong", b =>
                {
                    b.HasOne("DA.Models.NguoiThue", "NguoiThue")
                        .WithMany()
                        .HasForeignKey("MaNguoiThue")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DA.Models.Phong", "Phong")
                        .WithMany()
                        .HasForeignKey("MaPhong")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiThue");

                    b.Navigation("Phong");
                });

            modelBuilder.Entity("DA.Models.LichSuLuuTru", b =>
                {
                    b.HasOne("DA.Models.NguoiThue", "NguoiThue")
                        .WithMany()
                        .HasForeignKey("NguoiThueMaNguoiThue")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DA.Models.Phong", "Phong")
                        .WithMany()
                        .HasForeignKey("PhongMaPhong")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiThue");

                    b.Navigation("Phong");
                });

            modelBuilder.Entity("DA.Models.NguoiThue", b =>
                {
                    b.HasOne("DA.Models.TaiKhoan", "TaiKhoan")
                        .WithOne("NguoiThue")
                        .HasForeignKey("DA.Models.NguoiThue", "MaTaiKhoan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaiKhoan");
                });

            modelBuilder.Entity("DA.Models.PhanHoi", b =>
                {
                    b.HasOne("DA.Models.NguoiThue", "NguoiThue")
                        .WithMany()
                        .HasForeignKey("MaNguoiThue")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiThue");
                });

            modelBuilder.Entity("DA.Models.Phong", b =>
                {
                    b.HasOne("DA.Models.ChuNha", null)
                        .WithMany("Phongs")
                        .HasForeignKey("ChuNhaMaChuNha");

                    b.HasOne("DA.Models.ChuNha", "ChuNha")
                        .WithMany()
                        .HasForeignKey("MaChuNha")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChuNha");
                });

            modelBuilder.Entity("DA.Models.Phong_DichVu", b =>
                {
                    b.HasOne("DA.Models.DichVu", "DichVu")
                        .WithMany("Phong_DichVus")
                        .HasForeignKey("MaDichVu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DA.Models.Phong", "Phong")
                        .WithMany("Phong_DichVus")
                        .HasForeignKey("MaPhong")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DichVu");

                    b.Navigation("Phong");
                });

            modelBuilder.Entity("DA.Models.ChuNha", b =>
                {
                    b.Navigation("Phongs");
                });

            modelBuilder.Entity("DA.Models.DichVu", b =>
                {
                    b.Navigation("ChiTietHoaDons");

                    b.Navigation("Phong_DichVus");
                });

            modelBuilder.Entity("DA.Models.HoaDon", b =>
                {
                    b.Navigation("ChiTietHoaDons");
                });

            modelBuilder.Entity("DA.Models.HopDong", b =>
                {
                    b.Navigation("HoaDons");
                });

            modelBuilder.Entity("DA.Models.Phong", b =>
                {
                    b.Navigation("Phong_DichVus");
                });

            modelBuilder.Entity("DA.Models.TaiKhoan", b =>
                {
                    b.Navigation("ChuNha")
                        .IsRequired();

                    b.Navigation("NguoiThue")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
